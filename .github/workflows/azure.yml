on: 
  push:
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: team7acr
  CLUSTER_NAME: aks-default-37875945-vmss000000
  CLUSTER_RESOURCE_GROUP: team7
  NAMESPACE: default
  SECRET: opswd
  APP_NAME: online-shopping-system-advanced_web
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    # Connect to Azure Container Registry (ACR)
    - name: Connecting to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Checkout code
      uses: actions/checkout@master
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    #- name: Cloning Dockerfile repo
    #  run: git clone https://github.com/juanbaas/onlineshop-docker.git
    #- name: Showing entrypoint
    # run: cat online-shop-docker/docker-entrypoint.sh

    # Container build and push to a Azure Container Registry (ACR)
    - name: Container build and push to a Azure Container Registry (ACR)
      run: |
        cd app
        #docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
        #docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
        docker compose up -d
        docker tag online-shopping-system-advanced_web ${{env.REGISTRY_NAME}}/online-shopping-system-advanced_web
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
        
    
    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - name: Set the target Azure Kubernetes Service (AKS) cluster
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create image pull secret for ACR
    - name: Create image pull secret for ACR
      uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}
        force: true
    
   # - name: Deploying image to AKS cluster
    #  uses: azure/k8s-deploy@v1
    #  with:
    #    manifests: |
    #      deployment.yml
    #      service.yml
    #    images: |
    #      ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
    #      #${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:latest
    #    imagepullsecrets: |
    #      ${{ env.SECRET }}
    #    namespace: ${{ env.NAMESPACE }}
